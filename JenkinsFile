pipeline {
    agent any
    
    stages {
        stage("checkout") {
            steps {
                checkout scm
            }
        }
        
        stage("Build Image") {
            steps {
                script {
                    def dockerImageName = "puppetter"
                    def dockerImageVersion = getDockerImageVersion(dockerImageName)

                    def dockerImageExists = sh(script: "sudo docker images -q $dockerImageName:$dockerImageVersion", returnStatus: true) == 0

                    if (!dockerImageExists) {
                        echo "Docker image not found. Building using Ubuntu system."
                        sh "sudo docker build -t $dockerImageName:$dockerImageVersion ."
                    } else {
                        echo "Docker image already available."
                    }
                }
            }
        }
    }
    
    post {
        success {
            script {
                currentBuild.result = 'SUCCESS'
            }
        }
        failure {
            script {
                currentBuild.result = 'FAILURE'
            }
        }
    }
}

def getDockerImageVersion(imageName) {
    def version = 1
    def dockerImageDetails = sh(script: "sudo docker images --format \"{{.Tag}}\" $imageName", returnStdout: true).trim()

    if (dockerImageDetails) {
        def versions = sudo dockerImageDetails.tokenize('\n').collect { it.toInteger() }
        version = versions.max() + 1
    }

    return version
}
